.container {
  container-name: calculator;
  container-type: inline-size;
}

.containerGrid {
  display: grid;
  grid-template-rows: 1fr auto;
  @apply gap-4;
}

.buttonGrid {
  display: grid;
  grid-template-rows: repeat(5, minmax(0, 1fr));
  grid-template-columns: repeat(4, minmax(0, 1fr));
  @apply gap-2;
}

.displayGrid {
  display: grid;
  grid-template-rows: 1fr repeat(2, auto);
}

@container calculator (min-width: 29.5rem) {
  .buttonGrid {
    grid-template-columns: repeat(8, minmax(0, 1fr));
  }
}

.button {
  @apply rounded-full bg-pastel bg-opacity-60 transition-colors duration-150 ease-out text-center flex justify-center items-center;
}

.scientificButton {
  background-color: color-mix(
    in srgb,
    rgb(var(--color-light) / 0.6),
    rgb(var(--color-pastel) / 0.6) 40%
  );
  @apply hidden;
}

@container calculator (min-width: 29.5rem) {
  .scientificButton {
    @apply block;
  }
}

.mainOperator {
  background-color: color-mix(
    in srgb,
    rgb(var(--color-pastel) / 0.6),
    rgb(var(--color-saturated) / 0.6) 16%
  );
}

.secondaryButton {
  background-color: color-mix(
    in srgb,
    rgb(var(--color-light) / 0.6),
    rgb(var(--color-pastel) / 0.6) 60%
  );
}

.button {
  @apply hover:bg-pastel hover:bg-opacity-90;
}

.mainOperator:hover {
  background-color: color-mix(
    in srgb,
    rgb(var(--color-pastel) / 0.6),
    rgb(var(--color-saturated) / 0.6) 40%
  );
}

.varOn {
  background-color: color-mix(
    in srgb,
    rgb(var(--color-pastel) / 0.6),
    rgb(var(--color-saturated) / 0.6) 8%
  );
}

.varOn:hover {
  background-color: color-mix(
    in srgb,
    rgb(var(--color-pastel) / 0.8),
    rgb(var(--color-saturated) / 0.8) 32%
  );
}

.borderColor {
  border-color: color-mix(
    in srgb,
    rgb(var(--color-saturated) / 0.6) 33%,
    rgb(var(--color-pastel) / 0.6)
  );
}
